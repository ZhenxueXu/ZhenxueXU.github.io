---
layout: post
title: ECharts 实现热力图
subtitle: ' "java 根据地址转换坐标实现热力图"'
date: 2017-05-6T10:00:00.000Z
author: "\_XZX"
header-img: img/map.JPG
catalog: true
tags:
  - Echarts
  - Java
---
> jsf 热力图


## 前言
最近做毕业设计，需要用echarts在中国地图来画热力图，echart热力图的数据坐标需要用经纬度来表示，所以必须把地址转换为经纬度才能作图，经过一番折腾，总算是解决了，下面简单介绍下过程及代码。

## 前期准备
**js文件：**  
echarts.js  (echars官网下载)  
china.json (echarts官网地图下载)  
esl.js  
jquery.min.js

**jar文件:**  
gson.jar

此外，在地址与经纬坐标转换时是要用到百度地图API接口，需要在百度地图开发中心获取一个AK码，具体细节在百度地图API官网有详细介绍。

废话不说，上代码。

## 代码
1.用于完成经纬转换的Util  

LngAndLatUtil.java
```
package baiduMap;

import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.util.HashMap;
import java.util.Map;
public class LngAndLatUtil {

    public static Map<String, Double> getLngAndLat(String address) {
        Map<String, Double> map = new HashMap<String, Double>();
        try {
            address = java.net.URLEncoder.encode(address, "UTF-8");
        } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
        }

        String url = "http://api.map.baidu.com/geocoder/v2/?address=" + address + "&output=json&ak=这里放上百度地图的AK码";
        String json = loadJSON(url);                
        JsonParser parser = new JsonParser();
        JsonObject obj =  (JsonObject) parser.parse(json);
        if (obj.get("status").toString().equals("0")) {
            double lng = obj.getAsJsonObject("result").getAsJsonObject("location").get("lng").getAsDouble();//obj.getJSONObject("result").getJSONObject("location").getDouble("lng");
            double lat =  obj.getAsJsonObject("result").getAsJsonObject("location").get("lat").getAsDouble();
            map.put("lng", lng);
            map.put("lat", lat);
            //System.out.println("经度："+lng+"---纬度："+lat);
        } else {
            System.out.println("未找到相匹配的经纬度！");
        }
        return map;
    }
    public static String loadJSON(String url) {
        StringBuilder json = new StringBuilder();
        try {
            URL oracle = new URL(url);
            URLConnection yc = oracle.openConnection();
            BufferedReader in = new BufferedReader(new InputStreamReader(yc.getInputStream()));
            String inputLine = null;
            while ((inputLine = in.readLine()) != null) {
                json.append(inputLine);
            }
            in.close();
        } catch (MalformedURLException e) {
        } catch (IOException e) {
        }
        return json.toString();
    }

}

```
2.用来返回前端绘图数据的javaBean，返回格式json。

test.java
```
package test;

import com.google.gson.Gson;
import javax.inject.Named;
import javax.enterprise.context.SessionScoped;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@Named(value = "test")
@SessionScoped
public class Test2 implements Serializable {

    public Test2() {
    }
    private List<List<Double>> data;   //需要返回前端的数据

    public void setAllData() {
        String[] address = {"武汉大学经济管理学院", "华侨大学计算机学院", "厦门大学计算机学院"};  //需要绘图的地址
        data = new ArrayList<>();
        for (String addr : address) {
            List<Double> item = new ArrayList<>();    //每个数据点的数据
            Map<String, Double> map = new HashMap<>();  //获取每个地址转换后的经纬度
            map = baiduMap.LngAndLatUtil.getLngAndLat(addr);
            item.add(map.get("lng"));    //经度
            item.add(map.get("lat"));    // 纬度
            item.add(500.0);             //值
            data.add(item);
        }
    }

    public String getMapData() {
        //转换为json格式数据返回前端
        Gson gson = new Gson();
        System.out.println(gson.toJson(data));
        return gson.toJson(data);
    }

}

```

3.前端代码

前端是创建的jsf文件。


```
<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:p="http://primefaces.org/ui">
    <head>
        <meta charset="utf-8"/>
        <title>ECharts</title>
        <!-- 引入 echarts.js -->
        <script src="js/echarts.js"></script>
        <script src="js/jquery-1.9.1.min.js"></script>
        <link rel="stylesheet" type="text/css" href="css/charts.css"/>
        <script src="js/esl.js"></script>
    </head>
    <body>
        <!-- 为ECharts准备一个具备大小（宽高）的Dom -->
        <div id="main" style="width: 1100px;height:520px;"></div>
        <script type="text/javascript">
            // 基于准备好的dom，初始化echarts实例
            var dom = document.getElementById("main");
            var data = #{test.mapData};    //后台数据获取
            var app = {};
            option = null;
            option = {
                title: {
                    text: '科研机构发文被引频次热力图',
                    //subtext: 'data from PM25.in',
                    left: 'center',
                    textStyle: {
                        color: '#fff'
                    }
                },
                backgroundColor: '#404a59',
                visualMap: {
                    min: 0,
                    max: 60,
                    splitNumber: 5,
                    inRange: {
                        color: ['#d94e5d', '#eac736', '#50a3ba'].reverse()
                    },
                    textStyle: {
                        color: '#fff'
                    }
                },
                geo: {
                    map: 'china',
                    label: {
                        emphasis: {
                            show: false
                        }
                    },
                    roam: true,
                    itemStyle: {
                        normal: {
                            areaColor: '#323c48',
                            borderColor: '#111'
                        },
                        emphasis: {
                            areaColor: '#2a333d'
                        }
                    }
                },
                series: [{
                        name: '机构发表文献被引次数',
                        type: 'heatmap',
                        coordinateSystem: 'geo',
                        data: data     

                    }]
            };
            $.get('js/china.json', function (chinaJson) {
                echarts.registerMap('china', chinaJson);
                var myChart = echarts.init(dom);
                myChart.setOption(option);
            });


        </script>
    </body>
</html>

```
我自己后台绘图的结果如下
![](http://zhenxuexu.github.io/img/map.JPG)
